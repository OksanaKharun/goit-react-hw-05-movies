{"version":3,"file":"static/js/828.5069a893.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","components/api.js","components/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport image from 'images/notFound.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className='list-style'>\n      {movies &&\n        movies.map(({ id, name, title, poster_path }) => (\n          <li key={id} >\n            <Link\n              to={`/movies/${id}`}\n              state={{ location }}\n              className='li-style'\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : image\n                }\n                alt={title}\n                \n              />\n              <span className='name-style'>{name || title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};","\n\nimport axios from 'axios';\n\nconst api_key = '679e6fbb9d9a41d212e865e167d3fff9';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const moviesFetch = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await movieApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchMovieByCast = async id => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const searchMovieByReviews = async id => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};","import React from 'react';\n\n\nconst SearchForm = ({ handleSubmit, searchQuery, setSearchQuery }) => {\n  return (\n    <form className='search-style' onSubmit={handleSubmit}>\n      <input className='input-style'\n        type=\"text\"\n        placeholder=\"Enter your query here, please\"\n        value={searchQuery}\n        onChange={event => setSearchQuery(event.target.value)}\n      />\n      <button className='input-button' type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;","import { MoviesList } from '../components/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMoviesByName } from '../components/api';\nimport FormSearch from '../components/SearchForm';\n\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      try {\n        const response = await searchMoviesByName(query);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  return (\n    <div className=''>\n      <FormSearch\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        handleSubmit={handleSubmit}\n      />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","className","children","map","_ref2","id","name","title","poster_path","_jsxs","Link","to","concat","state","src","image","alt","movieApi","axios","baseURL","params","api_key","moviesFetch","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","searchMoviesByName","_callee2","searchQuery","_context2","query","_x","searchMovieById","_ref3","_callee3","_context3","_x2","searchMovieByCast","_ref4","_callee4","_context4","_x3","searchMovieByReviews","_ref5","_callee5","_context5","_x4","handleSubmit","setSearchQuery","onSubmit","type","placeholder","value","onChange","event","target","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","fetchMovie","t0","console","log","FormSearch","preventDefault"],"sourceRoot":""}